

{
  
  "isole": {
    "name": "I-Sole",
    "tech-stack": ["HTML", "CSS", "React", "Python", "Flask", "Google Cloud", "AWS", "DynamoDB"],
    "description": {
      "objective": "Developed a software solution for a non-invasive system integrated into a shoe sole to monitor glucose levels and predict foot ulcers for diabetes patients.",
      "keyFeatures": [
        "A machine learning-powered system to analyze glucose levels and foot pressure data, providing predictive alerts for potential foot ulcers and glucose spikes.",
        "A Flask-based backend API that processes sensor data and provides secure endpoints for patient data management.",
        "AWS DynamoDB integration to store patient records and ensure real-time data retrieval with high scalability.",
        "A React-based frontend dashboard that displays interactive reports, predictive alerts, and real-time health analytics.",
        "A React Native mobile application offering real-time health data and predictive alerts accessible to patients and healthcare providers."
      ],
      "myContribution": "Developed the Flask backend for API endpoints and ML integration, built the React-based frontend for the interactive dashboard, and integrated the React Native mobile application to work seemlessly with the backend server.",
      "challengesAndSolutions": [
        {
          "challenge": "Integrating the React Native mobile application with the backend server to provide real-time data.",
          "solution": "Implemented a WebSocket-based communication protocol to ensure real-time data synchronization between the backend and the mobile application."
        },
        {
          "challenge": "Migrating the database from Google Firestore to AWS DynamoDB for consistency with the rest of the deployment environment.",
          "solution": "Wrote custom scripts to transfer and map data from Firestore to DynamoDB, ensuring data integrity and seamless integration with the existing system."
        }
      ]
    },
    "images": [
      "/I-Sole-images/Console_1.png",
      "/I-Sole-images/Console_2.png",
      "/I-Sole-images/Login.png",
      "/I-Sole-images/Mobile_Console_1.png",
      "/I-Sole-images/Mobile_Console_2.png",
      "/I-Sole-images/Prediction_Graph.png",
      "/I-Sole-images/Pressure_Graph.png",
      "/I-Sole-images/Signup.png"
    ]
  },
  "jobpair": {
    "name": "JobpAIr",
    "tech-stack": ["React", "JavaScript", "Django", "PostgreSQL", "OpenAI API", "IBM Watson", "HTML", "CSS"],
    "description": {
      "objective": "Developed an AI-powered platform to simplify and streamline the job application process for users by automating repetitive tasks and providing intelligent insights.",
      "keyFeatures": [
        "An auto-filling system that uses user-provided information to populate job application forms seamlessly.",
        "AI-driven mock interview preparation with custom-tailored questions generated by OpenAI's GPT models.",
        "Personalized job recommendations based on user profiles and preferences using machine learning algorithms.",
        "A Django-based backend for handling data flow, user profiles, and integration with AI services.",
        "A React-based frontend providing a user-friendly interface for managing job applications, interview preparation, and job recommendations.",
        "PostgreSQL database to store user profiles, application histories, and job preferences."
      ],
      "myContribution": "Designed and implemented the React-based frontend for the application, integrated OpenAI API for mock interview functionality, and developed the Django backend for user management and job recommendation logic.",
      "challengesAndSolutions": [
        {
          "challenge": "Integrating OpenAI's API into the backend for real-time question generation in mock interviews.",
          "solution": "Developed a middleware layer to optimize API calls and handle asynchronous processing, reducing response times by 25%."
        },
        {
          "challenge": "Ensuring a seamless user experience while auto-filling job application forms with diverse formats.",
          "solution": "Implemented a robust parsing algorithm that adapted to multiple form structures, ensuring accurate and consistent data population."
        },
        {
          "challenge": "Creating an efficient job recommendation system tailored to user preferences.",
          "solution": "Built a machine learning pipeline to analyze user data and job descriptions, enabling personalized job matches with a high relevance score."
        }
      ]
    },
    "images": [
      "/Job-Pair-Images/Admin_2.png",
      "/Job-Pair-Images/Admin_main.png",
      "/Job-Pair-Images/Recruiter_job_creation.png",
      "/Job-Pair-Images/Seeker_AI_application.png",
      "/Job-Pair-Images/Seeker_Interview.png",
      "/Job-Pair-Images/Seeker_main.png",
      "/Job-Pair-Images/Seeker_mobile_AI_application.png",
      "/Job-Pair-Images/Seeker_mobile_interview.png",
      "/Job-Pair-Images/Seeker_mobile_main.png",
      "/Job-Pair-Images/Seeker_mobile_profile.png",
      "/Job-Pair-Images/Seeker_mobile_tracking.png",
      "/Job-Pair-Images/Seeker_profile.png",
      "/Job-Pair-Images/Seeker_profile_setup.png",
      "/Job-Pair-Images/Seeker_tracker.png",
      "/Job-Pair-Images/Signin.png",
      "/Job-Pair-Images/Signup.png"
    ]
  },
  "scholair": {
    "name": "Scholair",
    "tech-stack": ["React", "JavaScript", "Django", "PostgreSQL", "HTML", "CSS"],
    "description": {
      "objective": "Developed a platform to help students find scholarships, track their applications, and access curated resources for academic success.",
      "keyFeatures": [
        "A centralized scholarship search engine to help students discover opportunities tailored to their profiles.",
        "A Django-based backend API for managing scholarship data, user profiles, and tracking applications.",
        "A resource library containing curated articles, guides, and tools to assist students in their application process.",
        "Application tracking system to help students monitor their scholarship submissions and deadlines.",
        "A React-based frontend for providing an intuitive and responsive user experience."
      ],
      "myContribution": "Developed the React-based frontend for the platform, integrated the backend APIs for application tracking and resource management, and implemented the PostgreSQL database schema for efficient data storage.",
      "challengesAndSolutions": [
        {
          "challenge": "Ensuring the accuracy and relevance of the scholarship search results based on user profiles.",
          "solution": "Implemented advanced search and filtering algorithms to match users with the most suitable opportunities."
        },
        {
          "challenge": "Creating a seamless user interface for tracking multiple scholarship applications.",
          "solution": "Developed an interactive tracking system with visual timelines and reminders to enhance the user experience."
        },
        {
          "challenge": "Handling large amounts of resource and scholarship data efficiently.",
          "solution": "Optimized database queries and implemented server-side pagination to ensure fast response times and scalability."
        }
      ]
    },
    "images": [
      "/Scholair-Images/interview.png",
      "/Scholair-Images/resource.png",
      "/Scholair-Images/scholair.png",
      "/Scholair-Images/scholarship page.png",
      "/Scholair-Images/scholarships.png",
      "/Scholair-Images/tracking.png"
    ]
  }
}